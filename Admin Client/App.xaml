<Application x:Class="Admin_Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Admin_Client"
             StartupUri="\View\Windows\MainWindow.xaml">
    <Application.Resources>

        <!--#region PasswordBox-->
        
        <!--PasswordBox Rounded Corners-->
        <Style TargetType="PasswordBox" x:Key="roundcornerpassword">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border CornerRadius="10" x:Name="Bd" Background="White" BorderBrush="Gray" BorderThickness="1" OpacityMask="{x:Null}">
                            <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--#endregion-->

        <!--#region Buttons-->

        <!--Button 5% round-->
        <ResourceDictionary x:Key="roundcornerbutton5">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
            <Style TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Border x:Name="background" Background="LightSalmon">
                                                <Border.Resources>
                                                    <Style TargetType="Border">
                                                        <Setter Property="CornerRadius" Value="5"/>
                                                    </Style>
                                                </Border.Resources>
                                            </Border>
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="background" Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>

        <!--Button 10% round-->
        <ResourceDictionary x:Key="roundcornerbutton10">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="10"/>
            </Style>
            <Style TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Border x:Name="background" Background="LightSalmon">
                                                <Border.Resources>
                                                    <Style TargetType="Border">
                                                        <Setter Property="CornerRadius" Value="10"/>
                                                    </Style>
                                                </Border.Resources>
                                            </Border>
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="background" Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>

        <!--Button 100% round-->
        <ResourceDictionary x:Key="roundcornerbutton100">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="100"/>
            </Style>
            <Style TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Border x:Name="background" Background="LightSalmon">
                                                <Border.Resources>
                                                    <Style TargetType="Border">
                                                        <Setter Property="CornerRadius" Value="100"/>
                                                    </Style>
                                                </Border.Resources>
                                            </Border>
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="background" Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
        <!--#endregion-->

        <!--#region ButtonToIcons-->
        
        <!--Round Icon-->
        <ResourceDictionary x:Key="roundcornericon100">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="100"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
            </Style>
        </ResourceDictionary>
        
        <!--#endregion-->

        <!--#region Borders-->
        
        <!--Border 5% round-->
        <ResourceDictionary x:Key="roundborder5">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </ResourceDictionary>

        <!--Border 10% round-->
        <ResourceDictionary x:Key="roundborder10">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="10"/>
            </Style>
        </ResourceDictionary>

        <!--Border 15% round-->
        <ResourceDictionary x:Key="roundborder15">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="15"/>
            </Style>
        </ResourceDictionary>

        <!--Border 25% round-->
        <ResourceDictionary x:Key="roundborder25">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="25"/>
            </Style>
        </ResourceDictionary>

        <!--Border 100% round-->
        <ResourceDictionary x:Key="roundborder100">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="100"/>
            </Style>
        </ResourceDictionary>

        <!--#endregion-->
        
        <!--#region ListBox-->
        
        <!--ListBox rounded with empty check-->
        <Style TargetType="ListBox" x:Key="roundlistboxwithempty" BasedOn="{StaticResource {x:Type ListBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <ListBox Resources="{StaticResource roundborder10}"/>
                                    <Label Content="Empty" FontSize="20" FontWeight="Bold" Foreground="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center"></Label>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->
        
        <!--#region DataTemplates-->
        
        <!--DataTemplate Log-->

        <DataTemplate x:Key="logDataTemplate">
            <Border Name="border" BorderThickness="3,0,3,0" BorderBrush="Gray">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="datetime" Content="{Binding DateTimeString}" Grid.Column="0" HorizontalAlignment="Center" ></Label>
                    <Label x:Name="logtype" Content="{Binding LogType}" Grid.Column="1" HorizontalAlignment="Left" ></Label>
                    <Label x:Name="logtext" Content="{Binding LogTxt}" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ></Label>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=LogType}">
                    <DataTrigger.Value>
                        <local:LogType>Success</local:LogType>
                    </DataTrigger.Value>
                    <Setter TargetName="border" Property="Background" Value="LightGreen" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=LogType}">
                    <DataTrigger.Value>
                        <local:LogType>Information</local:LogType>
                    </DataTrigger.Value>
                    <Setter TargetName="border" Property="Background" Value="LightGray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=LogType}">
                    <DataTrigger.Value>
                        <local:LogType>UserAction</local:LogType>
                    </DataTrigger.Value>
                    <Setter TargetName="border" Property="Background" Value="Pink" />
                    <Setter TargetName="border" Property="BorderThickness" Value="3,3,3,0" />
                    <Setter TargetName="datetime" Property="FontWeight" Value="Bold" />
                    <Setter TargetName="logtype" Property="FontWeight" Value="Bold" />
                    <Setter TargetName="logtext" Property="FontWeight" Value="Bold" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=LogType}">
                    <DataTrigger.Value>
                        <local:LogType>Warning</local:LogType>
                    </DataTrigger.Value>
                    <Setter TargetName="border" Property="Background" Value="LightSalmon" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=LogType}">
                    <DataTrigger.Value>
                        <local:LogType>FatalError</local:LogType>
                    </DataTrigger.Value>
                    <Setter TargetName="border" Property="Background" Value="PaleVioletRed" />
                    <Setter TargetName="datetime" Property="FontWeight" Value="Bold" />
                    <Setter TargetName="logtype" Property="FontWeight" Value="Bold" />
                    <Setter TargetName="logtext" Property="FontWeight" Value="Bold" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--DataTemplate Log-->

        <DataTemplate x:Key="parameterDataTemplate">
            <Border Name="border" BorderThickness="0,3,0,0" BorderBrush="Gray" Resources="{StaticResource roundborder10}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="125"/>
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="name" Content="{Binding ParameterName}" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" ></Label>
                    <Label x:Name="type" Content="{Binding ParameterType}" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" ></Label>
                    <TextBox x:Name="value" Text="{Binding ParameterValue}" Grid.Column="2" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" Resources="{StaticResource roundborder10}" ></TextBox>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsValid}" Value="false">
                    <Setter TargetName="border" Property="Background" Value="PaleVioletRed"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        
        <!--#endregion-->
        
        <!--#region ContextMenu-->
        
        <!--ContextMenu rounded-->
        <Style TargetType="ContextMenu" x:Key="roundcontextmenu">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border CornerRadius="12" BorderBrush="Gray" BorderThickness="1" Background="White" SnapsToDevicePixels="True">
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region ItemContainerStyle-->

        <!--List item witout focusable-->
        <Style x:Key="NoTargetRoundedListItem" TargetType="{x:Type ListBoxItem}" Resources="{StaticResource roundborder10}">
            <Setter Property="Focusable" Value="false"/>
        </Style>

        <!--List item witout focusable and hover-->
        <Style x:Key="NoHoverOrTargetRoundedListItem" TargetType="{x:Type ListBoxItem}" Resources="{StaticResource roundborder10}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsHitTestVisible" Value="false"/>
        </Style>

        <!--#endregion-->

    </Application.Resources>
</Application>
